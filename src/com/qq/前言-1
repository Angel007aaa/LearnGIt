比如，把一头大象放进冰箱，通常会怎么做呢？
我们的习惯性思维是会分为三步，第一步，把冰箱门打开，第二步，把大象推进去，第三步，把冰箱门关闭（假设大象很乖，冰箱很大，门能关住）。
这种方式固然可行，但当场景发生变化时，比如大象变成猪，冰箱变成衣柜，类似的步骤用面向过程编码的话就要再写一遍
这样就导致代码开发变成了记流水账。我们仔细分析面向过程的这些步骤，会发现都是命令式的动宾结构：开冰箱门，推大象，场景切换下就是开衣柜门，推猪
你会发现从这两种场景下是可以找到共性的，就是冰箱门和衣柜门都有打开和关闭的特点，大象和猪都能走路，所以能被人推进去。
当我们的视角不再是流程，而是操作对象的时候，冰箱门和衣柜门都可以抽象成门，有打开和关闭的特点，大象和猪都可以抽象成动物，有走路的特点。
按这个思路，我们可以把这件事简化成主谓结构：门打开，动物走进去，门关闭。这种把事情分解成各个对象，描述对象在整个事情中的行为，就是面向对象思想。
你会发现，面向过程更讲事情的步骤，面向对象更讲对象的行为。

